# Generated by Django 5.2.1 on 2025-05-09 04:33

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('U', 'Unread'), ('R', 'Read'), ('A', 'Answered')], default='U', max_length=1)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('replied_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('professional_title', models.CharField(blank=True, max_length=200)),
                ('bio', models.TextField()),
                ('short_bio', models.CharField(blank=True, help_text='Short bio for preview cards', max_length=200)),
                ('photo', models.ImageField(default='profile/default.png', upload_to='profile/')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('linkedin', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('github', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('twitter', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('personal_website', models.URLField(blank=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.CharField(blank=True, max_length=200)),
                ('available_for_freelance', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('icon', models.CharField(default='fas fa-service', max_length=50)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=150)),
                ('featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('cta_link', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order', '-featured'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('level', models.CharField(choices=[('B', 'Beginner'), ('I', 'Intermediate'), ('A', 'Advanced'), ('E', 'Expert')], default='I', max_length=1)),
                ('proficiency', models.PositiveIntegerField(default=50, help_text='Proficiency percentage from 0-100', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('show_in_skillset', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('years_experience', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
            ],
            options={
                'ordering': ['order', '-proficiency'],
            },
        ),
        migrations.CreateModel(
            name='TechStack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('docs_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100)),
                ('client_company', models.CharField(blank=True, max_length=100)),
                ('client_role', models.CharField(blank=True, max_length=100)),
                ('feedback', models.TextField()),
                ('rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('avatar', models.ImageField(blank=True, upload_to='testimonials/')),
                ('featured', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=110, unique=True)),
                ('description', models.TextField()),
                ('excerpt', models.CharField(blank=True, max_length=200)),
                ('image', models.ImageField(upload_to='projects/')),
                ('github_link', models.URLField(blank=True)),
                ('live_link', models.URLField(blank=True)),
                ('featured', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('client_name', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tech_stack', models.ManyToManyField(to='core.techstack')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-featured', '-start_date'],
            },
        ),
    ]
